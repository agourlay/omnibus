# OMNIBUS EXTERNAL CONF

omnibus {
    timeout = "5 seconds"
    http {
        port = 8080
    }
    admin {
        userName = "admin"
        password = "omnibus"
    }
    topic {
        retentionTime = "3 days"
    }
    graphite {
        enable = false
        host = "graphite.example.com"
        port = 2003
        prefix = "omnibus"
    }
}

# OMNIBUS INTERNAL CONF

subscribers-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
}

topics-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
}

# AKKA CONF

akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    log-config-on-start = off
    log-dead-letters = off
    loglevel = "INFO"
    actor {
        default-mailbox {
            mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
        } 
        debug {
            receive = on
            autoreceive = on
            lifecycle = on
        }   
    }
    persistence {
        view.auto-update-interval = 2s
        view.auto-update = true
        journal {
            plugin = "akka.persistence.journal.leveldb"
            max-message-batch-size = 500
            leveldb {
                class = "akka.persistence.journal.leveldb.LeveldbJournal"
                dir = "../data/journal"
                native = on
            }
        }
        snapshot-store {
            local.dir = "../data/snapshots"
        }    
    }
}

# SPRAY CONF

spray.can { 
    server {
        pipelining-limit = disabled
        reaping-cycle = infinite
        response-size-hint = 192
        request-timeout = infinite
        idle-timeout = infinite
        connection-timeout = infinite
        chunkhandler-registration-timeout = 2s
        request-chunk-aggregation-limit = 0
        bind-timeout = 2s
        automatic-back-pressure-handling = on
        ssl-encryption = off
        server-header = "Omnibus"
        remote-address-header = on
        stats-support = off
    }
}