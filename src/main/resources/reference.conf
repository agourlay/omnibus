# OMNIBUS EXTERNAL CONF

omnibus {
    http {
        port = 8080
    }
    admin {
        userName = "admin"
        password = "omnibus"
    }
    timeout {
        ask = "5 seconds"
    }
    topic {
        retentionTime = "3 days"
    }
    graphite {
        enable = false
        host = "graphite.example.com:2003"
    }
    cluster {
        nodes = [""]
    }
}

# OMNIBUS INTERNAL CONF

requests-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 1.0
        parallelism-max = 1
    }
    throughput = 20
}

streaming-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 1.0
        parallelism-max = 1
    }
    throughput = 20
}

subscribers-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 1.0
        parallelism-max = 1
    }
    throughput = 20
}

topics-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 1.0
        parallelism-max = 1
    }
    throughput = 20
}

statistics-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 1.0
        parallelism-max = 1
    }
    throughput = 20
}

# AKKA CONF

akka {
    actor {
        provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
        log-remote-lifecycle-events = off
        netty.tcp {
            hostname = "127.0.0.1"
            port = 0
        }
    } 
    cluster {     
        log-info = on
    }
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    log-config-on-start = off
    log-dead-letters = off
    loglevel = "INFO"
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 1.0
        parallelism-max = 4
    }
    throughput = 20
    persistence {
        view.auto-update-interval = 2s
        view.auto-update = true
        journal {
            plugin = "cassandra-journal"
            max-message-batch-size = 500
        }
    }
    debug {
        receive = on
        autoreceive = on
        lifecycle = on
    }
}

# SPRAY CONF

spray.can { 
    server {
        pipelining-limit = disabled
        reaping-cycle = infinite
        response-size-hint = 192
        request-timeout = infinite
        idle-timeout = infinite
        connection-timeout = infinite
        chunkhandler-registration-timeout = 2s
        request-chunk-aggregation-limit = 0
        bind-timeout = 2s
        automatic-back-pressure-handling = on
        ssl-encryption = off
        server-header = "Omnibus"
        remote-address-header = on
    }
}
